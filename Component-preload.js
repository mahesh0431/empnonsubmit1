/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "emp/nom/sub/Component-preload",
	"modules": {
		"emp/nom/sub/Component.js": "sap.ui.define([\r\n\t\"sap/ui/core/UIComponent\",\r\n\t\"sap/ui/Device\",\r\n\t\"emp/nom/sub/model/models\",\r\n\t\"emp/nom/sub/controller/ErrorHandler\",\r\n\t\"emp/nom/sub/controller/ListSelector\"\r\n], function(UIComponent, Device, models, ErrorHandler, ListSelector) {\r\n\t\"use strict\";\r\n\r\n\treturn UIComponent.extend(\"emp.nom.sub.Component\", {\r\n\r\n\t\tmetadata: {\r\n\t\t\tmanifest: \"json\"\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\r\n\t\t * In this function, the FLP and device models are set and the router is initialized.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tinit: function() {\r\n\t\t\t// call the base component's init function\r\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\r\n\r\n\t\t\tthis.oListSelector = new ListSelector();\r\n\r\n\t\t\t// initialize the error handler with the component\r\n\t\t\t// this._oErrorHandler = new ErrorHandler(this);\r\n\r\n\t\t\t// set the device model\r\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\r\n\t\t\t// set the FLP model\r\n\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\r\n\r\n\t\t\t// Get the component parameter and set it to component\r\n\t\t\t// here we will read if the manager is opening the app or if it the employee\r\n\t\t\tvar mData = {\r\n\t\t\t\tisManager: false\r\n\t\t\t};\r\n\t\t\tif (this.getComponentData() && this.getComponentData().startupParameters.ISMANAGER) {\r\n\t\t\t\tif (this.getComponentData().startupParameters.ISMANAGER[0] === \"X\") {\r\n\t\t\t\t\tmData.isManager = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.setModel(models.createCompParamModel(mData), \"componentParams\");\r\n\r\n\t\t\t// code is fine\t\r\n\t\t\t// create the views based on the url/hash\r\n\t\t\tthis.getRouter().initialize();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is destroyed by UI5 automatically.\r\n\t\t * In this method, the ErrorHandler is destroyed.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tdestroy: function() {\r\n\t\t\tthis.oListSelector.destroy();\r\n\t\t\t// this._oErrorHandler.destroy();\r\n\t\t\t// call the base component's destroy function\r\n\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\r\n\t\t * design mode class should be set, which influences the size appearance of some controls.\r\n\t\t * @public\r\n\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\r\n\t\t */\r\n\t\tgetContentDensityClass: function() {\r\n\t\t\tif (this._sContentDensityClass === undefined) {\r\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\r\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\r\n\t\t\t\t\tthis._sContentDensityClass = \"\";\r\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this._sContentDensityClass;\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"emp/nom/sub/view/managerTeam.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"emp.nom.sub.controller.managerTeam\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<Page title=\"My Team Members\" showNavButton=\"true\" navButtonPress=\"handleNavBack\">\n\t\t<content>\n\t\t\t<List id=\"teamMembersTable\" busyIndicatorDelay=\"0\" items=\"{/EmpTeamMemberSet}\" growing=\"true\" growingThreshold=\"10\"\n\t\t\t\tmode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\" updateFinished=\"onUpdateFinished\" selectionChange=\"onSelectionChange\">\n\t\t\t\t<StandardListItem type=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\" press=\"onSelectionChange\" title=\"{Empname}\"\n\t\t\t\t\ticon=\"sap-icon://person-placeholder\" iconDensityAware=\"false\" iconInset=\"false\"/>\n\t\t\t</List>\n\t\t</content>\n\t\t<footer>\n\t\t\t<Toolbar>\n\n\t\t\t</Toolbar>\n\t\t</footer>\n\t</Page>\n</mvc:View>",
		"emp/nom/sub/view/ObjectNotFound.view.xml": "<mvc:View\r\n\tcontrollerName=\"emp.nom.sub.controller.NotFound\"\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\txmlns=\"sap.m\">\r\n\r\n\t<MessagePage\r\n\t\ttitle=\"{i18n>objectTitle}\"\r\n\t\ttext=\"{i18n>noObjectFoundText}\"\r\n\t\ticon=\"{sap-icon://product}\"\r\n\t\tdescription=\"\"\r\n\t\tid=\"page\">\r\n\t\t<customDescription>\r\n\t\t\t<Link id=\"link\" text=\"{i18n>backToWorklist}\" press=\"onLinkPressed\" />\r\n\t\t</customDescription>\r\n\t</MessagePage>\r\n\r\n</mvc:View>",
		"emp/nom/sub/view/NotFound.view.xml": "<mvc:View\r\n\tcontrollerName=\"emp.nom.sub.controller.NotFound\"\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\txmlns=\"sap.m\">\r\n\r\n\t<MessagePage\r\n\t\ttitle=\"{i18n>notFoundTitle}\"\r\n\t\ttext=\"{i18n>notFoundText}\"\r\n\t\ticon=\"{sap-icon://document}\"\r\n\t\tid=\"page\"\r\n\t\tdescription=\"\">\r\n\t\t<customDescription>\r\n\t\t\t<Link id=\"link\" text=\"{i18n>backToWorklist}\" press=\"onLinkPressed\" />\r\n\t\t</customDescription>\r\n\t</MessagePage>\r\n\r\n</mvc:View>",
		"emp/nom/sub/view/App.view.xml": "<mvc:View\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\tcontrollerName=\"emp.nom.sub.controller.App\"\r\n\tdisplayBlock=\"true\"\r\n\txmlns=\"sap.m\">\r\n\r\n\t<App id=\"app\"\r\n\t\t busy=\"{appView>/busy}\"\r\n\t\t busyIndicatorDelay=\"{appView>/delay}\"/>\r\n\r\n</mvc:View>",
		"emp/nom/sub/view/managerEmployeesSplitApp.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\tcontrollerName=\"emp.nom.sub.controller.managerEmployeesSplitApp\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n\t<SplitApp id=\"idSplitAppControl\"/>\n</mvc:View>",
		"emp/nom/sub/view/Object.view.xml": "<mvc:View\r\n\tcontrollerName=\"emp.nom.sub.controller.Object\"\r\n\txmlns=\"sap.m\"\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\txmlns:semantic=\"sap.m.semantic\"\r\n\txmlns:footerbar=\"sap.ushell.ui.footerbar\">\r\n\r\n\t<semantic:FullscreenPage\r\n\t\tid=\"page\"\r\n\t\tnavButtonPress=\"onNavBack\"\r\n\t\tshowNavButton=\"true\"\r\n\t\ttitle=\"{i18n>objectTitle}\"\r\n\t\tbusy=\"{objectView>/busy}\"\r\n\t\tbusyIndicatorDelay=\"{objectView>/delay}\">\r\n\r\n\t\t<semantic:content>\r\n\t\t\t<ObjectHeader\r\n\t\t\t\tid=\"objectHeader\"\r\n\t\t\t\ttitle=\"{EmpName}\"\r\n>\r\n\t\t\t</ObjectHeader>\r\n \t\t</semantic:content>\r\n\r\n\t\t<semantic:sendEmailAction>\r\n\t\t\t<semantic:SendEmailAction id=\"shareEmail\" press=\"onShareEmailPress\"/>\r\n\t\t</semantic:sendEmailAction>\r\n\r\n\t\t<semantic:shareInJamAction>\r\n\t\t\t<semantic:ShareInJamAction id=\"shareInJam\" visible=\"{FLP>/isShareInJamActive}\" press=\"onShareInJamPress\"/>\r\n\t\t</semantic:shareInJamAction>\r\n\r\n\t\t<semantic:saveAsTileAction>\r\n\t\t\t<footerbar:AddBookmarkButton id =\"shareTile\" title=\"{objectView>/saveAsTileTitle}\" />\r\n\t\t</semantic:saveAsTileAction>\r\n\r\n\t</semantic:FullscreenPage>\r\n\r\n</mvc:View>",
		"emp/nom/sub/view/ProgNominForm.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" controllerName=\"emp.nom.sub.controller.ProgNominForm\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:l=\"sap.ui.layout\" xmlns:rte=\"sap.ui.richtexteditor\">\n\t<Page id=\"idProgNominForm\" title=\"Program\" showNavButton=\"true\" navButtonPress=\"handleNavBack\" backgroundDesign=\"Transparent\"\n\t\ttitleLevel=\"H2\" showFooter=\"true\" enableScrolling=\"false\">\n\t\t<content>\n\t\t\t<!--<VBox height=\"100%\">-->\n\t\t\t<!--<l:FixFlex fixFirst=\"false\">-->\n\t\t\t<!--\t<l:flexContent >-->\n\t\t\t\n\t\t\t<VBox alignItems=\"Stretch\" alignContent=\"Stretch\" class=\"sapUiSmallMargin\" width=\"auto\" height=\"100%\" >\n\t\t\t\t<!--<VBox>-->\n\t\t\t\t<Title text=\"Brief description of job duties:\" titleStyle=\"H3\"/>\n\t\t\t\t<rte:RichTextEditor id=\"idFormEditor\" editorType=\"TinyMCE4\" width=\"100%\" height=\"95%\" value=\"{programForm>/editerValue}\">\n\t\t\t\t\t<rte:layoutData>\n\t\t\t\t\t\t<FlexItemData minHeight=\"60%\" maxHeight=\"60%\" baseSize=\"60%\"></FlexItemData>\n\t\t\t\t\t</rte:layoutData>\n\t\t\t\t</rte:RichTextEditor>\n\t\t\t\t<!--<layoutData>-->\n\t\t\t\t<!--\t<FlexItemData growFactor=\"1\"  minHeight=\"70%\" maxHeight=\"70%\"></FlexItemData>-->\n\t\t\t\t<!--</layoutData>-->\n\t\t\t\t<!--</VBox>-->\n\t\t\t\t<!--<Panel expandable=\"true\" expanded=\"true\" width=\"auto\" height=\"90%\" class=\"sapUiResponsiveMargin\">-->\n\t\t\t\t<!--\t<headerToolbar>-->\n\t\t\t\t<!--\t\t<Toolbar>-->\n\t\t\t\t<!--\t\t\t<Title text=\"Brief description of job duties:\"/>-->\n\t\t\t\t<!--\t\t\t<ToolbarSpacer/>-->\n\t\t\t\t<!--\t\t</Toolbar>-->\n\t\t\t\t<!--\t</headerToolbar>-->\n\t\t\t\t<!--\t<content>-->\n\t\t\t\t<!--\t\t<rte:RichTextEditor id=\"idFormEditor\" editorType=\"TinyMCE4\" width=\"100%\" height=\"95%\" value=\"\"/>-->\n\t\t\t\t<!--<l:VerticalLayout id=\"idFormEditorLayout\" width=\"100%\"></l:VerticalLayout>-->\n\t\t\t\t<!--\t</content>-->\n\t\t\t\t<!--\t<layoutData>-->\n\t\t\t\t<!--\t\t<FlexItemData minHeight=\"70%\" maxHeight=\"70%\"></FlexItemData>-->\n\t\t\t\t<!--\t</layoutData>-->\n\t\t\t\t<!--</Panel>-->\n\t\t\t\t<!--</l:flexContent>-->\n\t\t\t\t<!--<l:fixContent>-->\n\t\t\t\t\t<!--<Panel expandable=\"true\" expanded=\"true\" width=\"auto\" class=\"sapUiResponsiveMargin\">-->\n\t\t\t\t\t<!--\t<headerToolbar>-->\n\t\t\t\t\t<!--\t\t<Toolbar >-->\n\t\t\t\t\t<!--\t\t\t<Title text=\"Reasons for Nomination:\"/>-->\n\t\t\t\t\t<!--\t\t\t<ToolbarSpacer/>-->\n\t\t\t\t\t<!--\t\t</Toolbar>-->\n\t\t\t\t\t<!--\t</headerToolbar>-->\n\t\t\t\t\t<!--\t<content>-->\n\t\t\t\t\t\t\t<Title class=\"sapUiSmallMarginTop\" text=\"Reasons for Nomination:\" titleStyle=\"H3\"/>\n\t\t\t\t\t\t\t<VBox backgroundDesign=\"Solid\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<l:Grid id=\"idNominCheckboxGrid\" defaultSpan=\"L2 M4 S4\"  >\n\t\t\t\t\t\t\t\t\t<l:content>\n\t\t\t\t\t\t\t\t\t\t<CheckBox text=\"People Focus\" selected=\"{programForm>/checkbox1}\" enabled=\"true\"/>\n\t\t\t\t\t\t\t\t\t\t<CheckBox text=\"Innovation\" selected=\"{programForm>/checkbox2}\" enabled=\"true\"/>\n\t\t\t\t\t\t\t\t\t\t<CheckBox text=\"Diligence\" selected=\"{programForm>/checkbox3}\" enabled=\"true\"/>\n\t\t\t\t\t\t\t\t\t\t<CheckBox text=\"Transparency\" selected=\"{programForm>/checkbox4}\" enabled=\"true\"/>\n\t\t\t\t\t\t\t\t\t\t<CheckBox text=\"Results Orientation\" selected=\"{programForm>/checkbox5}\" enabled=\"true\"/>\n\t\t\t\t\t\t\t\t\t\t<CheckBox text=\"Positive Attitude\" selected=\"{programForm>/checkbox6}\" enabled=\"true\"/>\n\t\t\t\t\t\t\t\t\t\t<CheckBox text=\"Results Through Teamwork\" selected=\"{programForm>/checkbox7}\" enabled=\"true\"/>\n\t\t\t\t\t\t\t\t\t\t<CheckBox text=\"Continuous Improvement\" selected=\"{programForm>/checkbox8}\" enabled=\"true\"/>\n\t\t\t\t\t\t\t\t\t\t<CheckBox text=\"Communication\" selected=\"{programForm>/checkbox9}\" enabled=\"true\"/>\n\t\t\t\t\t\t\t\t\t\t<CheckBox text=\"Integrity\" selected=\"{programForm>/checkbox10}\" enabled=\"true\"/>\n\t\t\t\t\t\t\t\t\t</l:content>\n\t\t\t\t\t\t\t\t\t<l:layoutData>\n\t\t\t\t\t\t\t\t\t\t<FlexItemData minHeight=\"40%\" maxHeight=\"40%\"></FlexItemData>\n\t\t\t\t\t\t\t\t\t</l:layoutData>\n\t\t\t\t\t\t\t\t</l:Grid>\n\t\t\t\t\t\t\t\t<!--<layoutData>-->\n\t\t\t\t\t\t\t\t<!--\t<FlexItemData minHeight=\"35%\" maxHeight=\"35%\"></FlexItemData>-->\n\t\t\t\t\t\t\t\t<!--</layoutData>-->\n\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t<!--\t</content>-->\n\t\t\t\t\t<!--\t<layoutData>-->\n\t\t\t\t\t<!--\t\t<FlexItemData minHeight=\"30%\" maxHeight=\"30%\"></FlexItemData>-->\n\t\t\t\t\t<!--\t</layoutData>-->\n\t\t\t\t\t<!--</Panel>-->\n\t\t\t\t\t<!--</l:fixContent>-->\n\t\t\t\t<!--</VBox>-->\n\t\t\t\t</VBox>\n\t\t\t\t<!--</l:FixFlex>-->\n\t\t\t</content>\n\t\t\t<footer>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Toolbarspacer/>\n\t\t\t\t\t<Button icon=\"sap-icon://save\" text=\"Save\" type=\"Emphasized\" press=\"onNominFormSave\"/>\n\t\t\t\t\t<Button icon=\"sap-icon://accept\" text=\"Submit\" type=\"Accept\" press=\"onNominFormSubmit\"/>\n\t\t\t\t</Toolbar>\n\t\t\t</footer>\n\t\t</Page>\n\t</mvc:View>",
		"emp/nom/sub/view/Worklist.view.xml": "<core:View xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\" xmlns:uxap=\"sap.uxap\" xmlns:layout=\"sap.ui.layout\" xmlns:f=\"sap.ui.layout.form\"\n\tcontrollerName=\"emp.nom.sub.controller.Worklist\" height=\"100%\">\n\t<Page id=\"idEmpPage\" class=\"cl_EmpPage\" navButtonPress=\"onNavBack\" showFooter=\"true\" showNavButton=\"true\" title=\"{i18n>worklistViewTitle}\">\n\t\t<customHeader>\n\t\t\t<Toolbar id=\"idEmpPageCustomBar\" class=\"cl_EmpTsWlPageCustBar\">\n\t\t\t\t<content>\n\t\t\t\t\t<!--<ImageContent class=\"cl_waslLogo\" src=\"images/wasl_logo.png\" ></ImageContent>-->\n\t\t\t\t\t<Button id=\"idBackBtn\" visible=\"false\" icon=\"sap-icon://nav-back\" press=\"navBackToTeam\"/>\n\t\t\t\t\t<Image class=\"waslLogo\" src=\"images/wasl_logo.png\" height=\"35px\" width=\"50px\" backgroundPosition=\"center\"/>\n\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t<core:Icon src=\"sap-icon://competitor\"/>\n\t\t\t\t\t<Label id=\"idEmpTsPageCustomBarLabel\" text=\"Award Nomination\"></Label>\n\t\t\t\t\t<core:Icon src=\"sap-icon://competitor\"/>\n\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t<!--<Button icon=\"sap-icon://log\" class=\"cl_EmpPageLogOff\" press=\"onAppLogoff\" tooltip=\"Close\"></Button>-->\n\t\t\t\t</content>\n\t\t\t</Toolbar>\n\t\t</customHeader>\n\t\t<content>\n\t\t\t<uxap:ObjectPageLayout id=\"idEmpPageObjLayout\" class=\"cl_EmpPageObjLayout\" showTitleInHeaderContent=\"true\" showHeaderContent=\"true\">\n\t\t\t\t<uxap:headerTitle>\n\t\t\t\t\t<uxap:ObjectPageHeader id=\"idEmpPageHeader\" headerDesign=\"Light\" class=\"sapUiSmallMarginTop cl_EmpPageHeader\" objectTitle=\"{EmpName}\"\n\t\t\t\t\t\tshowTitleSelector=\"false\" showMarkers=\"false\" markFavorite=\"false\" markFlagged=\"false\" markChanges=\"false\"\n\t\t\t\t\t\tmarkChangesPress=\"handleMarkChangesPress\" objectSubtitle=\"{EmpDesig}\" objectImageURI=\"images/wasl_logo.png\" objectImageShape=\"Circle\"\n\t\t\t\t\t\tisObjectIconAlwaysVisible=\"false\" isObjectTitleAlwaysVisible=\"false\" isObjectSubtitleAlwaysVisible=\"false\" isActionAreaAlwaysVisible=\"false\"\n\t\t\t\t\t\tshowPlaceholder=\"true\">\n\t\t\t\t\t\t<!--\t<uxap:actions>\n\t\t\t\t\t\t\t<uxap:ObjectPageHeaderActionButton class=\"sapUiSmallMarginEnd cl_EmpTsActButton\" tooltip=\"View Org Chart\" visible=\"true\" icon=\"sap-icon://org-chart\"\n\t\t\t\t\t\t\t\tpress=\"onOrgChart\"/>\n\t\t\t\t\t\t</uxap:actions>-->\n\t\t\t\t\t</uxap:ObjectPageHeader>\n\t\t\t\t</uxap:headerTitle>\n\t\t\t\t<uxap:headerContent>\n\t\t\t\t\t<layout:VerticalLayout >\n\t\t\t\t\t\t<ObjectStatus title=\"Department\" text=\"{EmpdDeptName}\"/>\n\t\t\t\t\t</layout:VerticalLayout>\n\t\t\t\t\t<!--<layout:VerticalLayout >-->\n\t\t\t\t\t<!--\t<ObjectStatus id=\"empId\" title=\"Employee No\" text=\"{EmpNo}\"/>-->\n\t\t\t\t\t\t<!--<Text text=\"{EmpNo}\"/>-->\n\t\t\t\t\t<!--</layout:VerticalLayout>-->\n\t\t\t\t\t<layout:VerticalLayout >\n\t\t\t\t\t\t<ObjectStatus title=\"Mobile\" text=\"{EmpMob}\"/>\n\t\t\t\t\t\t<ObjectStatus title=\"Email\" text=\"{EmpMail}\"/>\n\t\t\t\t\t</layout:VerticalLayout>\n\t\t\t\t\t<layout:VerticalLayout>\n\t\t\t\t\t\t<ObjectStatus title=\"Manager\" text=\"{EmpMgrName}\"/>\n\t\t\t\t\t</layout:VerticalLayout>\n\t\t\t\t\t<layout:VerticalLayout visible=\"{= ${device>/system/desktop} === true}\"/>\n\t\t\t\t\t<!--<layout:VerticalLayout>-->\n\t\t\t\t\t<!--\t<ObjectStatus title=\"Overall Status\" text=\"{OverallStat}\" state=\"Error\"/>-->\n\t\t\t\t\t\t<!--<ObjectStatus title=\"Rejected Reason\" text=\"{tsEmpAppData>/status/stateText}\" visible=\"{path: 'tsEmpAppData>/status/description', formatter: '.formatter.showRejectedReason'}\"  state=\"{path: 'tsEmpAppData>/status/state', formatter: '.formatter.getTsHeaderStatus'}\" />-->\n\t\t\t\t\t<!--</layout:VerticalLayout>-->\n\t\t\t\t</uxap:headerContent>\n\t\t\t\t<uxap:sections>\n\t\t\t\t\t<uxap:ObjectPageSection title=\"Program Nominations\" class=\"cl_EmpPageObjPageSection\">\n\t\t\t\t\t\t<uxap:subSections>\n\t\t\t\t\t\t\t<uxap:ObjectPageSubSection title=\"\">\n\t\t\t\t\t\t\t\t<!--<Panel expandable=\"false\" expanded=\"true\" class=\"cl_EmpPageProgPanel\">-->\n\t\t\t\t\t\t\t\t<!--\t<layout:Grid defaultSpan=\"L12 M12 S12\" class=\"sapUiSmallMarginTop\">-->\n\t\t\t\t\t\t\t\t<!--\t\t<layout:content>-->\n\t\t\t\t\t\t\t\t<List mode=\"None\" items=\"{EmpProgNomList}\" noDataText=\"NO ITEMS FOUND\">\n\t\t\t\t\t\t\t\t\t<CustomListItem class=\"sapUiSmallMarginTopBottom\" press=\"handleProgramSelect\" type=\"Navigation\">\n\t\t\t\t\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon size=\"2rem\" color=\"{path:'Status', formatter:'.formatter.iconNominationProgramColor'}\"\n\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"{path:'Status', formatter:'.formatter.iconNominationProgram'}\" class=\"sapUiSmallMarginBegin sapUiSmallMarginTopBottom\"/>\n\t\t\t\t\t\t\t\t\t\t\t<VBox class=\"sapUiSmallMarginBegin sapUiSmallMarginTopBottom\">\n\t\t\t\t\t\t\t\t\t\t\t\t<!--\t<Label text=\"Program Name\" class=\"bold headerInfo\"/>-->\n\t\t\t\t\t\t\t\t\t\t\t\t<Title class=\"sapUiTinyMarginTop sapUiSmallMarginBegin\" text=\"{ProgName}\" level=\"H1\" titleStyle=\"H4\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t<!--<Text text=\"Please Nomination for Employee of Year\" class=\"bold headerInfo\"/>-->\n\t\t\t\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t\t\t\t<VBox class=\"sapUiSmallMarginBegin sapUiSmallMarginTopBottom\">\n\t\t\t\t\t\t\t\t\t\t\t\t<!--\t<Label text=\"Program Type\"/>-->\n\t\t\t\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiSmallMarginBegin\" text=\"{ProgTypeDescr}7\"/>\n\t\t\t\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t\t\t\t<VBox class=\"sapUiSmallMarginBegin sapUiSmallMarginTopBottom\">\n\t\t\t\t\t\t\t\t\t\t\t\t<!--\t<Label text=\"Started\"/>-->\n\t\t\t\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiSmallMarginBegin\" text=\"{path:'StartDate', type:'sap.ui.model.type.Date'}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t\t\t\t<VBox class=\"sapUiSmallMarginBegin sapUiSmallMarginTopBottom\">\n\t\t\t\t\t\t\t\t\t\t\t\t<!--<Label text=\"Ending\"/>-->\n\t\t\t\t\t\t\t\t\t\t\t\t<Label class=\"sapUiTinyMarginTop sapUiSmallMarginBegin\" text=\"{path:'EndDate', type:'sap.ui.model.type.Date'}\"/>\n\t\t\t\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t\t\t\t<VBox class=\"sapUiSmallMarginBegin sapUiSmallMarginTopBottom\">\n\t\t\t\t\t\t\t\t\t\t\t\t<!--\t<Label text=\"Status\"/>-->\n\t\t\t\t\t\t\t\t\t\t\t\t<ObjectStatus class=\"sapUiTinyMarginTop sapUiSmallMarginBegin\" text=\"{StatusTxt}\" state=\"Error\"/>\n\t\t\t\t\t\t\t\t\t\t\t</VBox>\n\t\t\t\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t\t\t\t</CustomListItem>\n\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t<!--\t\t</layout:content>-->\n\t\t\t\t\t\t\t\t<!--\t</layout:Grid>-->\n\t\t\t\t\t\t\t\t<!--</Panel>-->\n\t\t\t\t\t\t\t</uxap:ObjectPageSubSection>\n\t\t\t\t\t\t</uxap:subSections>\n\t\t\t\t\t</uxap:ObjectPageSection>\n\t\t\t\t</uxap:sections>\n\t\t\t</uxap:ObjectPageLayout>\n\t\t</content>\n\t\t<footer>\n\t\t\t<Toolbar>\n\t\t\t\t<Button id=\"idAppMessages\" icon=\"sap-icon://message-popup\" type=\"Reject\" press=\"handleAppMessages\"/>\n\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t<Button icon=\"sap-icon://manager\" id=\"btShowTeam\" text=\"Nominate Team\" type=\"Emphasized\" press=\"handleShowTeam\"></Button>\n\t\t\t\t<Button icon=\"sap-icon://history\" text=\"History\" type=\"Emphasized\"/>\n\t\t\t</Toolbar>\n\t\t</footer>\n\t</Page>\n</core:View>",
		"emp/nom/sub/model/models.js": "sap.ui.define([\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/Device\"\r\n], function(JSONModel, Device) {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\r\n\t\tcreateDeviceModel: function() {\r\n\t\t\tvar oModel = new JSONModel(Device);\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t},\r\n\r\n\t\tcreateFLPModel: function() {\r\n\t\t\tvar fnGetUser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\r\n\t\t\t\tbIsShareInJamActive = fnGetUser ? fnGetUser().isJamActive() : false,\r\n\t\t\t\toModel = new JSONModel({\r\n\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\r\n\t\t\t\t});\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t},\r\n\r\n\t\tcreateCompParamModel: function(params) {\r\n\t\t\tvar oModel = new JSONModel(params);\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t},\r\n\r\n\t\tgetProgramFormModel: function() {\r\n\t\t\treturn new JSONModel({\r\n\t\t\t\tProgId: \"\",\r\n\t\t\t\tNominId: \"\",\r\n\t\t\t\tProgName: \"\",\r\n\t\t\t\tProgType: \"\",\r\n\t\t\t\tNominByMgr: \"\",\r\n\t\t\t\tStatus: \"\",\r\n\t\t\t\tStatusTxt: \"\",\r\n\t\t\t\tNominEmpNo: \"\",\r\n\t\t\t\tediterValue: \"\",\r\n\t\t\t\tcheckbox1: false,\r\n\t\t\t\tcheckbox2: false,\r\n\t\t\t\tcheckbox3: false,\r\n\t\t\t\tcheckbox4: false,\r\n\t\t\t\tcheckbox5: false,\r\n\t\t\t\tcheckbox6: false,\r\n\t\t\t\tcheckbox7: false,\r\n\t\t\t\tcheckbox8: false,\r\n\t\t\t\tcheckbox9: false,\r\n\t\t\t\tcheckbox10: false\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t};\r\n\r\n});",
		"emp/nom/sub/model/formatter.js": "sap.ui.define([], function() {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\r\n\t\t/**\r\n\t\t * Rounds the number unit value to 2 digits\r\n\t\t * @public\r\n\t\t * @param {string} sValue the number string to be rounded\r\n\t\t * @returns {string} sValue with 2 digits rounded\r\n\t\t */\r\n\t\tnumberUnit: function(sValue) {\r\n\t\t\tif (!sValue) {\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t\treturn parseFloat(sValue).toFixed(2);\r\n\t\t},\r\n\r\n\t\ticonNominationProgram: function(sValue) {\r\n\t\t\tvar sIcon;\r\n\t\t\tswitch (sValue) {\r\n\t\t\t\tcase \"1\":\r\n\t\t\t\t\tsIcon = \"sap-icon://save\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"2\":\r\n\t\t\t\t\tsIcon = \"sap-icon://complete\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"3\":\r\n\t\t\t\t\tsIcon = \"sap-icon://pending\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn sIcon;\r\n\t\t},\r\n\r\n\t\ticonNominationProgramColor: function(sValue) {\r\n\t\t\tvar sIconColor;\r\n\t\t\tswitch (sValue) {\r\n\t\t\t\tcase \"1\":\r\n\t\t\t\t\tsIconColor = \"orange\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"2\":\r\n\t\t\t\t\tsIconColor = \"green\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"3\":\r\n\t\t\t\t\tsIconColor = \"red\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn sIconColor;\r\n\t\t}\r\n\r\n\t};\r\n\r\n});",
		"emp/nom/sub/controller/Worklist.controller.js": "sap.ui.define([\r\n\t\"emp/nom/sub/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/core/routing/History\",\r\n\t\"emp/nom/sub/model/formatter\",\r\n\t\"sap/ui/model/Filter\",\r\n\t\"sap/ui/model/Binding\",\r\n\t\"sap/ui/model/FilterOperator\",\r\n\t\"emp/nom/sub/util/Helper/DataManager\",\r\n\t\"emp/nom/sub/util/Helper/ModelHelper\",\r\n\t\"emp/nom/sub/util/Helper/MessageHelper\"\r\n], function(BaseController, JSONModel, History, formatter, Filter, Binding, FilterOperator, DataManager, ModelHelper,\r\n\tMessageHelper) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"emp.nom.sub.controller.Worklist\", {\r\n\r\n\t\tformatter: formatter,\r\n\t\tModelHelper: ModelHelper,\r\n\t\tMessageHelper: MessageHelper,\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\t\tonInit: function() {\r\n\t\t\tthis.oModel = this.getOwnerComponent().getModel();\r\n\t\t\tthis.oDataManager = new DataManager(this);\r\n\t\t\tthis._messageHelper = new MessageHelper(this);\r\n\t\t\tthis._initializeApplicationModels();\r\n\r\n\t\t\t// Register the routes\r\n\t\t\t// For nomral employee/manager who is viewing his data\r\n\t\t\tthis.getRouter().getRoute(\"worklist\").attachPatternMatched(this._employeeHandler, this);\r\n\t\t\t// For manager who views one his team member data\r\n\t\t\tthis.getRouter().getRoute(\"managerteammember\").attachPatternMatched(this._teamMemberHandler, this);\r\n\t\t},\r\n\r\n\t\tonAfterRendering: function() {\r\n\t\t\t// this._loadApplicationData();\r\n\r\n\t\t},\r\n\r\n\t\t/* ============================================================ */\r\n\t\t/* Control Event Handlers\t\t\t\t\t\t\t\t\t    */\r\n\t\t/* =============================================================*/\r\n\r\n\t\thandleAppMessages: function() {\r\n\t\t\tvar mAppMessagePopover = this.byId(\"idAppMessages\");\r\n\t\t\tif (this._messageHelper.getMessagePopover()) {\r\n\t\t\t\tmAppMessagePopover.setVisible(true);\r\n\t\t\t\tthis._messageHelper.getMessagePopover().toggle(mAppMessagePopover);\r\n\t\t\t} else {\r\n\t\t\t\tmAppMessagePopover.setVisible(false);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thandleProgramSelect: function(oEvent) {\r\n\t\t\t// var programId;\r\n\t\t\tvar programId = oEvent.getSource().getBindingContext().getObject().ProgId;\r\n\t\t\tif (this.managerTeamView) {\r\n\t\t\t\tthis.navigateToRoute(\"managerteammemberprogram\", {\r\n\t\t\t\t\temployeeId: this.empId,\r\n\t\t\t\t\tprogramID: programId\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.navigateToRoute(\"program\", {\r\n\t\t\t\t\tprogramID: programId\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t * The below function will be used to call split app which\r\n\t\t * shows employee and their nominations\r\n\t\t */\r\n\t\thandleShowTeam: function() {\r\n\t\t\tthis.getOwnerComponent().getRouter().navTo(\"managerteam\");\r\n\t\t},\r\n\r\n\t\t/* ============================================================ */\r\n\t\t/* Controller Methods                                           */\r\n\t\t/* =============================================================*/\r\n\r\n\t\t_initializeApplicationModels: function() {\r\n\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t * This is will be called when an employee/manager is viewing his own data\r\n\t\t * @constructor \r\n\t\t */\r\n\t\t_employeeHandler: function() {\r\n\t\t\t// this.getView().byId(\"idEmpTsPageCustomBarLabel\").setText(\"Employee Award Nomination\");\r\n\t\t\tif (this.getView().getModel(\"componentParams\").getData().isManager) {\r\n\t\t\t\tthis.getView().byId(\"btShowTeam\").setVisible(true);\r\n\t\t\t} else {\r\n\t\t\t\tthis.getView().byId(\"btShowTeam\").setVisible(false);\r\n\t\t\t}\r\n\r\n\t\t\tthis.getView().byId(\"idBackBtn\").setVisible(false);\r\n\t\t\tthis.managerTeamView = false;\r\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(function() {\r\n\t\t\t\tvar oModel = this.getOwnerComponent().getModel();\r\n\t\t\t\tthis.getView().setBusy(true);\r\n\t\t\t\toModel.callFunction(\"/GetLoginEmployeeId\", {\r\n\t\t\t\t\tmethod: \"GET\",\r\n\t\t\t\t\tsuccess: function(mData) {\r\n\t\t\t\t\t\t// this.getView().setBusy(false);\r\n\t\t\t\t\t\tthis.empId = mData.GetLoginEmployeeId.empId;\r\n\t\t\t\t\t\tthis._bindView(mData.GetLoginEmployeeId.empId);\r\n\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\terror: function() {\r\n\t\t\t\t\t\tthis.getView().setBusy(false);\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t});\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t * This will be called when a manager is viewing his team members data\r\n\t\t * @constructor \r\n\t\t * @param oEvent to get the employee id\r\n\t\t */\r\n\t\t_teamMemberHandler: function(oEvent) {\r\n\t\t\t// Hide the team button when \r\n\t\t\tthis.getView().byId(\"btShowTeam\").setVisible(false);\r\n\t\t\tif (this.getModel(\"device\").getData().system.phone) {\r\n\t\t\t\tthis.getView().byId(\"idBackBtn\").setVisible(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.managerTeamView = true;\r\n\t\t\tthis.empId = oEvent.getParameter(\"arguments\").employeeId;\r\n\t\t\t// this.managerId = oEvent.getParameter(\"arguments\").managerNo;\r\n\r\n\t\t\t// If team member data is loaded successfully, we need to call listselector method\r\n\t\t\t// create the promise\r\n\r\n\t\t\tvar fnSuccess,\r\n\t\t\t\toTeamMemberLoaded = new Promise(function(success) {\r\n\t\t\t\t\tfnSuccess = success;\r\n\t\t\t\t});\r\n\r\n\t\t\tthis._bindView(this.empId, fnSuccess);\r\n\t\t\toTeamMemberLoaded.then(function() {\r\n\t\t\t\tvar oView = this.getView();\r\n\t\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(oView.getBindingContext().getObject().EmpNo);\r\n\t\t\t}.bind(this));\r\n\t\t\t// this.getView().byId(\"idEmpTsPageCustomBarLabel\").setText(\"Manager Award Nomination\");\r\n\r\n\t\t},\r\n\r\n\t\t_bindView: function(empId, fnTeamHandlerSuccess) {\r\n\r\n\t\t\tthis.getModel().metadataLoaded().then(function() {\r\n\t\t\t\tvar sObjectPath = this.getModel().createKey(\"EmpHeaderInfoSet\", {\r\n\t\t\t\t\tEmpNo: empId\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.getView().unbindElement();\r\n\t\t\t\tthis.getView().bindElement({\r\n\t\t\t\t\tpath: \"/\" + sObjectPath,\r\n\t\t\t\t\tevents: {\r\n\t\t\t\t\t\tchange: function() {\r\n\t\t\t\t\t\t\tif (fnTeamHandlerSuccess) {\r\n\t\t\t\t\t\t\t\tfnTeamHandlerSuccess();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.getView().setBusy(false);\r\n\t\t\t\t\t\t\t// this.getView().getModel().refresh();\r\n\t\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\t\tdataRequested: function() {\r\n\t\t\t\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(function() {\r\n\t\t\t\t\t\t\t\t// Busy indicator on view should only be set if metadata is loaded,\r\n\t\t\t\t\t\t\t\t// otherwise there may be two busy indications next to each other on the\r\n\t\t\t\t\t\t\t\t// screen. This happens because route matched handler already calls '_bindView'\r\n\t\t\t\t\t\t\t\t// while metadata is loaded.\r\n\t\t\t\t\t\t\t\tthis.getView().setBusy(true);\r\n\t\t\t\t\t\t\t}.bind(this));\r\n\t\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\t\tdataReceived: function() {\r\n\t\t\t\t\t\t\tthis.getView().setBusy(false);\r\n\t\t\t\t\t\t}.bind(this)\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t_loadApplicationData: function() {\r\n\t\t\tvar aFilters = [];\r\n\t\t\tthis.getView().setBusy(true);\r\n\t\t\tthis.oDataManager.readEmpProgramList(aFilters, $.proxy(this.onProgramListLoaded, this), this.handleRequestError.bind(this));\r\n\t\t},\r\n\r\n\t\tonProgramListLoaded: function(data) {\r\n\t\t\tthis.getView().setBusy(false);\r\n\t\t},\r\n\r\n\t\thandleRequestError: function(oError) {\r\n\t\t\tthis.getView().setBusy(false);\r\n\t\t},\r\n\r\n\t\tnavigateToRoute: function(routeName, mObject) {\r\n\t\t\tthis.getRouter().navTo(routeName, mObject);\r\n\t\t},\r\n\r\n\t\tnavBackToTeam: function() {\r\n\t\t\tthis.navBack();\r\n\t\t},\r\n\r\n\t\tonSearch: function(oEvent) {\r\n\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\r\n\t\t\t\t// Search field's 'refresh' button has been pressed.\r\n\t\t\t\t// This is visible if you select any master list item.\r\n\t\t\t\t// In this case no new search is triggered, we only\r\n\t\t\t\t// refresh the list binding.\r\n\t\t\t\tthis.onRefresh();\r\n\t\t\t} else {\r\n\t\t\t\tvar oTableSearchState = [];\r\n\t\t\t\tvar sQuery = oEvent.getParameter(\"query\");\r\n\r\n\t\t\t\tif (sQuery && sQuery.length > 0) {\r\n\t\t\t\t\toTableSearchState = [new Filter(\"EmpName\", FilterOperator.Contains, sQuery)];\r\n\t\t\t\t}\r\n\t\t\t\tthis._applySearch(oTableSearchState);\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method to apply both filter and search state together on the list binding\r\n\t\t * @param {object} oTableSearchState an array of filters for the search\r\n\t\t * @private\r\n\t\t */\r\n\t\t_applySearch: function(oTableSearchState) {\r\n\t\t\tvar oTable = this.byId(\"table\"),\r\n\t\t\t\toViewModel = this.getModel(\"worklistView\");\r\n\t\t\toTable.getBinding(\"items\").filter(oTableSearchState, \"Application\");\r\n\t\t\t// changes the noDataText of the list in case there are no filter results\r\n\t\t\tif (oTableSearchState.length !== 0) {\r\n\t\t\t\toViewModel.setProperty(\"/tableNoDataText\", this.getResourceBundle().getText(\"worklistNoDataWithSearchText\"));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n});",
		"emp/nom/sub/controller/App.controller.js": "sap.ui.define([\r\n\t\t\"emp/nom/sub/controller/BaseController\",\r\n\t\t\"sap/ui/model/json/JSONModel\"\r\n\t], function (BaseController, JSONModel) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn BaseController.extend(\"emp.nom.sub.controller.App\", {\r\n\r\n\t\t\tonInit : function () {\r\n\t\t\t\tvar oViewModel,\r\n\t\t\t\t\tfnSetAppNotBusy,\r\n\t\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\r\n\r\n\t\t\t\toViewModel = new JSONModel({\r\n\t\t\t\t\tbusy : true,\r\n\t\t\t\t\tdelay : 0\r\n\t\t\t\t});\r\n\t\t\t\tthis.setModel(oViewModel, \"appView\");\r\n\r\n\t\t\t\tfnSetAppNotBusy = function() {\r\n\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().\r\n\t\t\t\t\tthen(fnSetAppNotBusy);\r\n\r\n\t\t\t\t// apply content density mode to root view\r\n\t\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n);",
		"emp/nom/sub/controller/NotFound.controller.js": "sap.ui.define([\r\n\t\t\"emp/nom/sub/controller/BaseController\"\r\n\t], function (BaseController) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn BaseController.extend(\"emp.nom.sub.controller.NotFound\", {\r\n\r\n\t\t\t/**\r\n\t\t\t * Navigates to the worklist when the link is pressed\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonLinkPressed : function () {\r\n\t\t\t\tthis.getRouter().navTo(\"worklist\");\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",
		"emp/nom/sub/controller/managerTeam.controller.js": "sap.ui.define([\r\n\t\"emp/nom/sub/controller/BaseController\",\r\n\t\"sap/ui/model/Filter\",\r\n\t\"sap/ui/model/FilterOperator\",\r\n\t\"sap/ui/Device\"\r\n], function(Controller, Filter, FilterOperator, Device) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"emp.nom.sub.controller.managerTeam\", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf emp.nom.sub.view.managerTeam\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\tthis.getRouter().getRoute(\"managerteam\").attachPatternMatched(this._handleManagerTeamPattern, this);\r\n\t\t\tvar oList = this.getView().byId(\"teamMembersTable\");\r\n\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeFirstShow: function() {\r\n\t\t\t\t\tthis.getOwnerComponent().oListSelector.setBoundMasterList(oList);\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\t// this.getOwnerComponent().getModel().metadataLoaded().then(function() {\r\n\t\t\t// \tthis.mangerNo = '156';\r\n\t\t\t// \tvar sObjectPath = this.getModel().createKey(\"EmpHeaderInfoSet\", {\r\n\t\t\t// \t\tEmpNo: '156'\r\n\t\t\t// \t});\r\n\t\t\t// \tthis._bindView(\"/\" + sObjectPath);\r\n\t\t\t// }.bind(this));\r\n\t\t},\r\n\r\n\t\t/*********************************************************************************************************/\r\n\t\t/** Event Handler Methods \r\n\t\t/*********************************************************************************************************/\r\n\t\t/** \r\n\t\t * Navigate back\r\n\t\t */\r\n\t\thandleNavBack: function() {\r\n\t\t\tthis.navBack();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the list selection event\r\n\t\t * @param {sap.ui.base.Event} oEvent the list selectionChange event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSelectionChange: function(oEvent) {\r\n\t\t\t// get the list item, either from the listItem parameter or from the event's source itself (will depend on the device-dependent mode).\r\n\t\t\tthis._showDetail(oEvent.getParameter(\"listItem\") || oEvent.getSource());\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t * For reading the manager no\r\n\t\t * @constructor \r\n\t\t * @param oEvent event data\r\n\t\t */\r\n\t\t_handleManagerTeamPattern: function(oEvent) {\r\n\r\n\t\t\t// this.mangerNo = oEvent.getParameter(\"arguments\").managerNo;\r\n\r\n\t\t\t// this.getModel().metadataLoaded().then(function() {\r\n\t\t\t// \tvar sObjectPath = this.getModel().createKey(\"EmpHeaderInfoSet\", {\r\n\t\t\t// \t\tEmpNo: this.mangerNo\r\n\t\t\t// \t});\r\n\t\t\t// \tthis._bindView(\"/\" + sObjectPath);\r\n\t\t\t// }.bind(this));\r\n\r\n\t\t\t// this.getView().byId(\"teamMembersTable\").getBinding(\"items\").filter([new Filter(\"Empmgrno\", FilterOperator.Contains, this.mangerNo)]);\r\n\r\n\t\t\t// Below logic is used when the employees are loaded and the first employe is automaticallly selected\r\n\t\t\tthis.getOwnerComponent().oListSelector.oWhenListLoadingIsDone.then(\r\n\t\t\t\tfunction(mParams) {\r\n\t\t\t\t\tif (mParams.list.getMode() === \"None\") {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar sObjectId = mParams.firstListitem.getBindingContext().getProperty(\"Empno\");\r\n\t\t\t\t\tthis.getRouter().navTo(\"managerteammember\", {\r\n\t\t\t\t\t\t// managerNo: this.mangerNo,\r\n\t\t\t\t\t\temployeeId: sObjectId\r\n\t\t\t\t\t}, true);\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\tfunction(mParams) {\r\n\t\t\t\t\tif (mParams.error) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// this.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/*********************************************************************************************************/\r\n\t\t/** Local Methods \r\n\t\t/*********************************************************************************************************/\r\n\r\n\t\t_bindView: function(sObjectPath) {\r\n\t\t\t// this.getView().bindElement({\r\n\t\t\t// \tpath: sObjectPath,\r\n\t\t\t// \tevents: {\r\n\t\t\t// \t\t// change: this._onBindingChange.bind(this),\r\n\t\t\t// \t\tdataRequested: function() {\r\n\t\t\t// \t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(function() {\r\n\t\t\t// \t\t\t\t// Busy indicator on view should only be set if metadata is loaded,\r\n\t\t\t// \t\t\t\t// otherwise there may be two busy indications next to each other on the\r\n\t\t\t// \t\t\t\t// screen. This happens because route matched handler already calls '_bindView'\r\n\t\t\t// \t\t\t\t// while metadata is loaded.\r\n\t\t\t// \t\t\t\tthis.getView().setBusy(true);\r\n\t\t\t// \t\t\t}.bind(this));\r\n\t\t\t// \t\t}.bind(this),\r\n\t\t\t// \t\tdataReceived: function() {\r\n\t\t\t// \t\t\tthis.getView().setBusy(false);\r\n\t\t\t// \t\t}.bind(this)\r\n\t\t\t// \t}\r\n\t\t\t// });\r\n\t\t},\r\n\r\n\t\t_showDetail: function(oItem) {\r\n\t\t\tvar bReplace = !Device.system.phone;\r\n\t\t\tthis.getRouter().navTo(\"managerteammember\", {\r\n\t\t\t\t// managerNo: this.mangerNo,\r\n\t\t\t\temployeeId: oItem.getBindingContext().getProperty(\"Empno\")\r\n\t\t\t}, bReplace);\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"emp/nom/sub/controller/BaseController.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"sap/ui/core/routing/History\"\r\n], function(Controller, History) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"emp.nom.sub.controller.BaseController\", {\r\n\r\n\t\tgetMessageManager: function() {\r\n\t\t\treturn sap.ui.getCore().getMessageManager();\r\n\t\t},\r\n\r\n\t\tgetMessageModel: function() {\r\n\t\t\treturn this.getMessageManager().getMessageModel();\r\n\t\t},\r\n\r\n\t\tgetRouter: function() {\r\n\t\t\treturn sap.ui.core.UIComponent.getRouterFor(this);\r\n\t\t},\r\n\r\n\t\tgetModel: function(sName) {\r\n\t\t\treturn this.getView().getModel(sName);\r\n\t\t},\r\n\r\n\t\tsetModel: function(oModel, sName) {\r\n\t\t\treturn this.getView().setModel(oModel, sName);\r\n\t\t},\r\n\t\t\r\n\t\tnavBack: function() {\r\n\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\tthis.getRouter().navTo(\"worklist\", {}, true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetResourceBundle: function() {\r\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"emp/nom/sub/controller/managerEmployeesSplitApp.controller.js": "sap.ui.define([\r\n\t\"emp/nom/sub/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(Controller) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"emp.nom.sub.controller.managerEmployeesSplitApp\", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf emp.nom.sub.view.managerEmployeesSplitApp\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\tvar oListSelector = this.getOwnerComponent().oListSelector;\r\n\t\t\t// Makes sure that master view is hidden in split app\r\n\t\t\t// after a new list entry has been selected.\r\n\t\t\toListSelector.attachListSelectionChange(function() {\r\n\t\t\t\tthis.byId(\"idSplitAppControl\").hideMaster();\r\n\t\t\t}, this);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf emp.nom.sub.view.managerEmployeesSplitApp\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf emp.nom.sub.view.managerEmployeesSplitApp\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf emp.nom.sub.view.managerEmployeesSplitApp\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});",
		"emp/nom/sub/controller/Object.controller.js": "/*global location*/\r\nsap.ui.define([\r\n\t\t\"emp/nom/sub/controller/BaseController\",\r\n\t\t\"sap/ui/model/json/JSONModel\",\r\n\t\t\"sap/ui/core/routing/History\",\r\n\t\t\"emp/nom/sub/model/formatter\"\r\n\t], function (\r\n\t\tBaseController,\r\n\t\tJSONModel,\r\n\t\tHistory,\r\n\t\tformatter\r\n\t) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn BaseController.extend(\"emp.nom.sub.controller.Object\", {\r\n\r\n\t\t\tformatter: formatter,\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* lifecycle methods                                           */\r\n\t\t\t/* =========================================================== */\r\n\r\n\t\t\t/**\r\n\t\t\t * Called when the worklist controller is instantiated.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonInit : function () {\r\n\t\t\t\t// Model used to manipulate control states. The chosen values make sure,\r\n\t\t\t\t// detail page is busy indication immediately so there is no break in\r\n\t\t\t\t// between the busy indication for loading the view's meta data\r\n\t\t\t\tvar iOriginalBusyDelay,\r\n\t\t\t\t\toViewModel = new JSONModel({\r\n\t\t\t\t\t\tbusy : true,\r\n\t\t\t\t\t\tdelay : 0\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\r\n\r\n\t\t\t\t// Store original busy indicator delay, so it can be restored later on\r\n\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\r\n\t\t\t\tthis.setModel(oViewModel, \"objectView\");\r\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(function () {\r\n\t\t\t\t\t\t// Restore original busy indicator delay for the object view\r\n\t\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t},\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* event handlers                                              */\r\n\t\t\t/* =========================================================== */\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler when the share in JAM button has been clicked\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonShareInJamPress : function () {\r\n\t\t\t\tvar oViewModel = this.getModel(\"objectView\"),\r\n\t\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\r\n\t\t\t\t\t\tname: \"sap.collaboration.components.fiori.sharing.dialog\",\r\n\t\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\t\tobject:{\r\n\t\t\t\t\t\t\t\tid: location.href,\r\n\t\t\t\t\t\t\t\tshare: oViewModel.getProperty(\"/shareOnJamTitle\")\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\toShareDialog.open();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler  for navigating back.\r\n\t\t\t * It there is a history entry or an previous app-to-app navigation we go one step back in the browser history\r\n\t\t\t * If not, it will replace the current entry of the browser history with the worklist route.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonNavBack : function() {\r\n\t\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash(),\r\n\t\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\r\n\r\n\t\t\t\tif (sPreviousHash !== undefined || !oCrossAppNavigator.isInitialNavigation()) {\r\n\t\t\t\t\thistory.go(-1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.getRouter().navTo(\"worklist\", {}, true);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* internal methods                                            */\r\n\t\t\t/* =========================================================== */\r\n\r\n\t\t\t/**\r\n\t\t\t * Binds the view to the object path.\r\n\t\t\t * @function\r\n\t\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_onObjectMatched : function (oEvent) {\r\n\t\t\t\tvar sObjectId =  oEvent.getParameter(\"arguments\").objectId;\r\n\t\t\t\tthis.getModel().metadataLoaded().then( function() {\r\n\t\t\t\t\tvar sObjectPath = this.getModel().createKey(\"EmpHeaderInfoSet\", {\r\n\t\t\t\t\t\tEmpNo :  sObjectId\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis._bindView(\"/\" + sObjectPath);\r\n\t\t\t\t}.bind(this));\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Binds the view to the object path.\r\n\t\t\t * @function\r\n\t\t\t * @param {string} sObjectPath path to the object to be bound\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_bindView : function (sObjectPath) {\r\n\t\t\t\tvar oViewModel = this.getModel(\"objectView\"),\r\n\t\t\t\t\toDataModel = this.getModel();\r\n\r\n\t\t\t\tthis.getView().bindElement({\r\n\t\t\t\t\tpath: sObjectPath,\r\n\t\t\t\t\tevents: {\r\n\t\t\t\t\t\tchange: this._onBindingChange.bind(this),\r\n\t\t\t\t\t\tdataRequested: function () {\r\n\t\t\t\t\t\t\toDataModel.metadataLoaded().then(function () {\r\n\t\t\t\t\t\t\t\t// Busy indicator on view should only be set if metadata is loaded,\r\n\t\t\t\t\t\t\t\t// otherwise there may be two busy indications next to each other on the\r\n\t\t\t\t\t\t\t\t// screen. This happens because route matched handler already calls '_bindView'\r\n\t\t\t\t\t\t\t\t// while metadata is loaded.\r\n\t\t\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tdataReceived: function () {\r\n\t\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t_onBindingChange : function () {\r\n\t\t\t\tvar oView = this.getView(),\r\n\t\t\t\t\toViewModel = this.getModel(\"objectView\"),\r\n\t\t\t\t\toElementBinding = oView.getElementBinding();\r\n\r\n\t\t\t\t// No data for the binding\r\n\t\t\t\tif (!oElementBinding.getBoundContext()) {\r\n\t\t\t\t\tthis.getRouter().getTargets().display(\"objectNotFound\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar oResourceBundle = this.getResourceBundle(),\r\n\t\t\t\t\toObject = oView.getBindingContext().getObject(),\r\n\t\t\t\t\tsObjectId = oObject.EmpNo,\r\n\t\t\t\t\tsObjectName = oObject.EmpName;\r\n\r\n\t\t\t\t// Everything went fine.\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\toViewModel.setProperty(\"/saveAsTileTitle\", oResourceBundle.getText(\"saveAsTileTitle\", [sObjectName]));\r\n\t\t\t\toViewModel.setProperty(\"/shareOnJamTitle\", sObjectName);\r\n\t\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\r\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\r\n\t\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\r\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",
		"emp/nom/sub/controller/ProgNominForm.controller.js": "sap.ui.define([\r\n\t\"emp/nom/sub/controller/BaseController\",\r\n\t\"sap/ui/richtexteditor/RichTextEditor\",\r\n\t\"emp/nom/sub/model/models\"\r\n], function(BaseController, RTE, models) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"emp.nom.sub.controller.ProgNominForm\", {\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\t\tonInit: function() {\r\n\t\t\tthis.getRouter().getRoute(\"program\").attachPatternMatched(this._onRouteMatched, this);\r\n\t\t\tthis.getRouter().getRoute(\"managerteammemberprogram\").attachPatternMatched(this._onRouteMatchedTeamMember, this);\r\n\t\t},\r\n\r\n\t\tonBeforeRendering: function() {\r\n\r\n\t\t},\r\n\r\n\t\t/* ============================================================ */\r\n\t\t/* Event Handlers                                               */\r\n\t\t/* =============================================================*/\r\n\r\n\t\thandleNavBack: function() {\r\n\t\t\tthis.navBack();\r\n\t\t},\r\n\r\n\t\t/* ============================================================ */\r\n\t\t/* Controller Methods                                           */\r\n\t\t/* =============================================================*/\r\n\r\n\t\t/** \r\n\t\t * This below method is triggered when the manager opens his team member submission\r\n\t\t * @constructor \r\n\t\t * @param oEvent\r\n\t\t */\r\n\t\t_onRouteMatchedTeamMember: function(oEvent) {\r\n\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t * This below method is triggered when the manager/employee opens his own submission\r\n\t\t * @constructor \r\n\t\t * @param mObject\r\n\t\t */\r\n\t\t_onRouteMatched: function(mObject) {\r\n\t\t\tvar programId = mObject.getParameter(\"arguments\").programID;\r\n\t\t\t// this.getModel().attachEventOnce(\"requestFailed\", this._programRequestFailed, this);\r\n\t\t\tthis._readProgramById(programId);\r\n\t\t},\r\n\r\n\t\t_readProgramById: function(programId) {\r\n\t\t\tthis.setInitViewModels();\r\n\t\t\tvar mPage = this.getView().byId(\"idProgNominForm\");\r\n\r\n\t\t\tmPage.setTitle(\"Program Nomination Form\");\r\n\t\t\tvar fmSetProgramData = function(mData) {\r\n\t\t\t\tvar programFormModel = this.getView().getModel(\"programForm\");\r\n\t\t\t\tmPage.setTitle(\"Program \" + mData.ProgId);\r\n\t\t\t\t// mForm.getTitle().setText((mData.Status === \"2\" ? \"Display\" : \"Change\") + \" Program\");\r\n\t\t\t\tprogramFormModel.getData().ProgId = mData.ProgId;\r\n\t\t\t\tprogramFormModel.getData().NominId = mData.ProgName;\r\n\t\t\t\tprogramFormModel.getData().ProgName = mData.ProgType;\r\n\t\t\t\tprogramFormModel.getData().ProgType = mData.ProgType;\r\n\t\t\t\tprogramFormModel.getData().NominByMgr = mData.NominByMgr;\r\n\t\t\t\tprogramFormModel.getData().Status = mData.Status;\r\n\t\t\t\tprogramFormModel.getData().StatusTxt = mData.StatusTxt;\r\n\t\t\t\tprogramFormModel.getData().NominEmpNo = mData.NominEmpNo;\r\n\t\t\t\tmData.NominFormDetailSet.results.forEach(function(item) {\r\n\t\t\t\t\tswitch (item.Questno) {\r\n\t\t\t\t\t\tcase \"001\":\r\n\t\t\t\t\t\t\tprogramFormModel.getData().editerValue = item.Answer;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"002\":\r\n\t\t\t\t\t\t\tvar aCheckedItems = item.Answer.split(\"/\");\r\n\t\t\t\t\t\t\taCheckedItems.forEach(function(checked) {\r\n\t\t\t\t\t\t\t\tprogramFormModel.getData()[\"checkbox\" + checked] = true;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tprogramFormModel.refresh();\r\n\t\t\t}.bind(this);\r\n\t\t\tthis.getModel().read(\"/\" + this.getModel().createKey(\"EmpProgListSet\", {\r\n\t\t\t\tProgId: programId\r\n\t\t\t}), {\r\n\t\t\t\turlParameters: {\r\n\t\t\t\t\t$expand: \"NominFormDetailSet\"\r\n\t\t\t\t},\r\n\t\t\t\tsuccess: function(data, response) {\r\n\t\t\t\t\tfmSetProgramData(data);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\tsetInitViewModels: function() {\r\n\t\t\tthis.getView().setModel(models.getProgramFormModel(), \"programForm\");\r\n\t\t},\r\n\r\n\t\t_programRequestFailed: function(oEvent) {\r\n\r\n\t\t},\r\n\r\n\t\tgetFormData: function() {\r\n\t\t\tvar formValue, reasonList = \"\",\r\n\t\t\t\taFormAnswers = [];\r\n\t\t\tformValue = this.byId(\"idFormEditor\").getValue();\r\n\t\t\tthis.byId(\"idNominCheckboxGrid\").getContent().forEach(function(mItem, index) {\r\n\t\t\t\tif (mItem.getSelected() === true) {\r\n\t\t\t\t\treasonList = reasonList + String(index) + \"/\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\taFormAnswers = [{\r\n\t\t\t\tQuestno: \"001\",\r\n\t\t\t\tAnswer: formValue\r\n\t\t\t}, {\r\n\t\t\t\tQuestno: \"002\",\r\n\t\t\t\tAnswer: reasonList\r\n\t\t\t}];\r\n\r\n\t\t\treturn {\r\n\t\t\t\tProgId: this.programId,\r\n\t\t\t\tNominByMgr: \"\",\r\n\t\t\t\tNominId: \"\",\r\n\t\t\t\tProgName: \"\",\r\n\t\t\t\tProgType: \"\",\r\n\t\t\t\tProgTypeDescr: \"\",\r\n\t\t\t\tStatus: \"\",\r\n\t\t\t\tNominFormDetailSet: aFormAnswers\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tonNominFormSave: function() {\r\n\t\t\tvar formData = this.getFormData();\r\n\t\t\tformData.Status = \"1\";\r\n\t\t\tthis._createNominationForm(formData);\r\n\t\t},\r\n\r\n\t\tonNominFormSubmit: function() {\r\n\t\t\t// Check confirm before submit\r\n\t\t\tvar formData = this.getFormData();\r\n\t\t\tformData.Status = \"2\";\r\n\t\t\tthis._createNominationForm(formData);\r\n\t\t},\r\n\r\n\t\t_createNominationForm: function(formData) {\r\n\t\t\tthis.getView().getModel().create(\"/EmpProgListSet\", formData, {\r\n\t\t\t\tsuccess: function(data, response) {\r\n\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t_onBindingChange: function() {\r\n\t\t\tvar oView = this.getView(),\r\n\t\t\t\toElementBinding = oView.getElementBinding();\r\n\r\n\t\t\t// No data for the binding\r\n\t\t\tif (!oElementBinding.getBoundContext()) {\r\n\t\t\t\tthis.getRouter().getTargets().display(\"objectNotFound\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t});\r\n\r\n});",
		"emp/nom/sub/controller/ListSelector.js": "sap.ui.define([\n\t\"sap/ui/base/Object\"\n], function(BaseObject) {\n\t\"use strict\";\n\n\treturn BaseObject.extend(\"emp.nom.sub.controller.ListSelector\", {\n\n\t\t/**\n\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\n\t\t * function.\n\t\t * @class\n\t\t * @public\n\t\t * @alias com.test.mdpage.model.ListSelector\n\t\t */\n\n\t\tconstructor: function() {\n\t\t\tthis._oWhenListHasBeenSet = new Promise(function(fnResolveListHasBeenSet) {\n\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\n\t\t\t}.bind(this));\n\t\t\t// This promise needs to be created in the constructor, since it is allowed to\n\t\t\t// invoke selectItem functions before calling setBoundMasterList\n\t\t\tthis.oWhenListLoadingIsDone = new Promise(function(fnResolve, fnReject) {\n\t\t\t\t// Used to wait until the setBound masterList function is invoked\n\t\t\t\tthis._oWhenListHasBeenSet\n\t\t\t\t\t.then(function(oList) {\n\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\n\t\t\t\t\t\t\tfunction(oData) {\n\t\t\t\t\t\t\t\tif (!oData.getParameter(\"data\")) {\n\t\t\t\t\t\t\t\t\tfnReject({\n\t\t\t\t\t\t\t\t\t\tlist: oList,\n\t\t\t\t\t\t\t\t\t\terror: true\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar oFirstListItem = oList.getItems()[0];\n\t\t\t\t\t\t\t\tif (oFirstListItem) {\n\t\t\t\t\t\t\t\t\t// Have to make sure that first list Item is selected\n\t\t\t\t\t\t\t\t\t// and a select event is triggered. Like that, the corresponding\n\t\t\t\t\t\t\t\t\t// detail page is loaded automatically\n\t\t\t\t\t\t\t\t\tfnResolve({\n\t\t\t\t\t\t\t\t\t\tlist: oList,\n\t\t\t\t\t\t\t\t\t\tfirstListitem: oFirstListItem\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// No items in the list\n\t\t\t\t\t\t\t\t\tfnReject({\n\t\t\t\t\t\t\t\t\t\tlist: oList,\n\t\t\t\t\t\t\t\t\t\terror: false\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t/**\n\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\n\t\t * May only be invoked once per ListSelector instance.\n\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\n\t\t * @public\n\t\t */\n\t\tsetBoundMasterList: function(oList) {\n\t\t\tthis._oList = oList;\n\t\t\tthis._fnResolveListHasBeenSet(oList);\n\t\t},\n\n\t\t/**\n\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\n\t\t * no selection/scrolling will happen\n\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\n\t\t * @public\n\t\t */\n\t\tselectAListItem: function(Empno) {\n\n\t\t\tthis.oWhenListLoadingIsDone.then(\n\t\t\t\tfunction() {\n\t\t\t\t\tvar oList = this._oList,\n\t\t\t\t\t\toSelectedItem;\n\n\t\t\t\t\tif (oList.getMode() === \"None\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\toSelectedItem = oList.getSelectedItem();\n\n\t\t\t\t\t// skip update if the current selection is already matching the object path\n\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getObject().Empno === Empno) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\toList.getItems().some(function(oItem) {\n\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getObject().Empno === Empno) {\n\t\t\t\t\t\t\toList.setSelectedItem(oItem);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}.bind(this),\n\t\t\t\tfunction() {\n\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + Empno +\n\t\t\t\t\t\t\" because the list encountered an error or had no items\");\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* Convenience Functions for List Selection Change Event       */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Attaches a listener and listener function to the ListSelector's bound master list. By using\n\t\t * a promise, the listener is added, even if the list is not available when 'attachListSelectionChange'\n\t\t * is called.\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\n\t\t * @param {function} oListener the listener object\n\t\t * @return {com.test.mdpage.model.ListSelector} the list selector object for method chaining\n\t\t * @public\n\t\t */\n\t\tattachListSelectionChange: function(fnFunction, oListener) {\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\n\t\t\t\tthis._oList.attachSelectionChange(fnFunction, oListener);\n\t\t\t}.bind(this));\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Detaches a listener and listener function from the ListSelector's bound master list. By using\n\t\t * a promise, the listener is removed, even if the list is not available when 'detachListSelectionChange'\n\t\t * is called.\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\n\t\t * @param {function} oListener the listener object\n\t\t * @return {com.test.mdpage.model.ListSelector} the list selector object for method chaining\n\t\t * @public\n\t\t */\n\t\tdetachListSelectionChange: function(fnFunction, oListener) {\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\n\t\t\t\tthis._oList.detachSelectionChange(fnFunction, oListener);\n\t\t\t}.bind(this));\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Removes all selections from master list.\n\t\t * Does not trigger 'selectionChange' event on master list, though.\n\t\t * @public\n\t\t */\n\t\tclearMasterListSelection: function() {\n\t\t\t//use promise to make sure that 'this._oList' is available\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\n\t\t\t\tthis._oList.removeSelections(true);\n\t\t\t}.bind(this));\n\t\t}\n\n\t});\n\n});",
		"emp/nom/sub/controller/ErrorHandler.js": "sap.ui.define([\r\n\t\t\"sap/ui/base/Object\",\r\n\t\t\"sap/m/MessageBox\"\r\n\t], function (UI5Object, MessageBox) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn UI5Object.extend(\"emp.nom.sub.controller.ErrorHandler\", {\r\n\r\n\t\t\t/**\r\n\t\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\r\n\t\t\t * @class\r\n\t\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\r\n\t\t\t * @public\r\n\t\t\t * @alias emp.nom.sub.controller.ErrorHandler\r\n\t\t\t */\r\n\t\t\tconstructor : function (oComponent) {\r\n\t\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\r\n\t\t\t\tthis._oComponent = oComponent;\r\n\t\t\t\tthis._oModel = oComponent.getModel();\r\n\t\t\t\tthis._bMessageOpen = false;\r\n\t\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\r\n\r\n\t\t\t\tthis._oModel.attachMetadataFailed(function (oEvent) {\r\n\t\t\t\t\tvar oParams = oEvent.getParameters();\r\n\t\t\t\t\tthis._showServiceError(oParams.response);\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\tthis._oModel.attachRequestFailed(function (oEvent) {\r\n\t\t\t\t\tvar oParams = oEvent.getParameters();\r\n\t\t\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\r\n\t\t\t\t\t// We already cover this case with a notFound target so we skip it here.\r\n\t\t\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\r\n\t\t\t\t\tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\r\n\t\t\t\t\t\tthis._showServiceError(oParams.response);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\r\n\t\t\t * Only the first error message will be display.\r\n\t\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_showServiceError : function (sDetails) {\r\n\t\t\t\tif (this._bMessageOpen) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis._bMessageOpen = true;\r\n\t\t\t\tMessageBox.error(\r\n\t\t\t\t\tthis._sErrorText,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid : \"serviceErrorMessageBox\",\r\n\t\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\r\n\t\t\t\t\t\tonClose: function () {\r\n\t\t\t\t\t\t\tthis._bMessageOpen = false;\r\n\t\t\t\t\t\t}.bind(this)\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n);",
		"emp/nom/sub/util/Helper/DataManager.js": "sap.ui.define([\r\n\t\t\"sap/ui/base/EventProvider\"\r\n\t],\r\n\tfunction(EventProvider) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn EventProvider.extend(\"emp.nom.sub.util.Helper.dataManager\", {\r\n\t\t\tconstructor: function(baseController) {\r\n\t\t\t\tthis.oBaseController = baseController;\r\n\t\t\t\tthis.oModel = this.oBaseController.getOwnerComponent().getModel();\r\n\t\t\t},\r\n\r\n\t\t\treadEmpProgramList: function(filters, fnSuccess, fnError) {\r\n\t\t\t\tvar path, aFilters = [],\r\n\t\t\t\t\turlParams = null;\r\n\t\t\t\tpath = \"/EmpHeaderInfoSet\";\r\n\t\t\t\taFilters = filters;\r\n\t\t\t\turlParams = {\r\n\t\t\t\t\t$expand: \"EmpProgNomList\"\r\n\t\t\t\t};\r\n\t\t\t\tif(!fnError) {\r\n\t\t\t\t\tfnError = jQuery.proxy(this.handleReadRequestFailed, this);\r\n\t\t\t\t}\r\n\t\t\t\tthis.oModel.metadataLoaded().then(function() {\r\n\t\t\t\t\tthis.oDataReadRequest(path, aFilters, urlParams, fnSuccess, fnError);\r\n\t\t\t\t}.bind(this));\r\n\t\t\t},\r\n\r\n\t\t\t// readEmpTimesheetFiltered: function(filters, fnSuccess) {\r\n\t\t\t// \tvar path, aFilters = null,\r\n\t\t\t// \t\turlParams = null;\r\n\t\t\t// \tpath = \"/EmployeeTimesheetSet\";\r\n\t\t\t// \taFilters = filters;\r\n\t\t\t// \turlParams = {\r\n\t\t\t// \t\t$expand: \"CalendarMonthsSet,TimesheetEntrySet,AdminProjectsSet\"\r\n\t\t\t// \t};\r\n\t\t\t// \tthis.oBaseController.getOwnerComponent().oWhenMetadataLoaded.then(function() {\r\n\t\t\t// \t\tthis.oDataReadRequest(path, aFilters, urlParams, fnSuccess, jQuery.proxy(this.handleReadRequestFailed, this));\r\n\t\t\t// \t}.bind(this));\r\n\t\t\t// },\r\n\r\n\t\t\t// readProjectValueRequest: function(filters, fnSuccess) {\r\n\t\t\t// \tvar path, aFilters = null,\r\n\t\t\t// \t\turlParams = null;\r\n\t\t\t// \tpath = \"/VH_ProjectsSet\";\r\n\t\t\t// \taFilters = filters;\r\n\t\t\t// \tthis.oBaseController.getOwnerComponent().oWhenMetadataLoaded.then(function() {\r\n\t\t\t// \t\tthis.oDataReadRequest(path, aFilters, urlParams, fnSuccess, jQuery.proxy(this.handleReadRequestFailed, this));\r\n\t\t\t// \t}.bind(this));\r\n\t\t\t// },\r\n\r\n\t\t\toDataReadRequest: function(path, filters, urlParams, fnSuccess, fnError) {\r\n\t\t\t\tthis.oModel.read(path, {\r\n\t\t\t\t\tfilters: filters,\r\n\t\t\t\t\turlParameters: urlParams,\r\n\t\t\t\t\tsuccess: fnSuccess,\r\n\t\t\t\t\terror: fnError\r\n\t\t\t\t});\r\n\r\n\t\t\t},\r\n\r\n\t\t\thandleReadRequestFailed: function(oError) {\r\n\t\t\t\tthis.oBaseController.getView().setBusy(false);\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t});",
		"emp/nom/sub/util/Helper/ValueHelpDialogSingle.js": "/* global _:true */\r\nsap.ui.define([\r\n\t\"sap/ui/comp/valuehelpdialog/ValueHelpDialog\",\r\n\t\"sap/ui/table/Table\"\r\n], function(ValueHelpDialog) {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\r\n\t\tinitializeValueRequestDialog: function(valueHelpTexts, cols, keys) {\r\n\t\t\tthis.oValueHelpTexts = valueHelpTexts;\r\n\t\t\tthis.aCols = cols;\r\n\t\t\tthis.aKeys = keys;\r\n\t\t\tthis.oColModel = new sap.ui.model.json.JSONModel();\r\n\t\t\tthis.oRowModel = new sap.ui.model.json.JSONModel();\r\n\t\t},\r\n\r\n\t\tonInputValueRequest: function(baseController, valueReqObj, fnHandleSelected) {\r\n\t\t\tthis.baseController = baseController;\r\n\t\t\tthis.valueHelpHandleOk = fnHandleSelected;\r\n\t\t\tswitch (valueReqObj) {\r\n\t\t\t\tcase \"ProjectSearch\":\r\n\t\t\t\t\tthis.valueRequestDialogForProject();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'EmployeSearch':\r\n\t\t\t\t\tthis.valueRequestDialogForEmployees();\r\n\t\t\t\tdefault:\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tvalueRequestDialogForProject: function() {\r\n\t\t\tvar vEmpNo, aFilters = [],\r\n\t\t\t\taCols = [],\r\n\t\t\t\taKeys = [],\r\n\t\t\t\toValueHelpTexts = {};\r\n\t\t\taCols = [{\r\n\t\t\t\tlabel: \"Project Def.\",\r\n\t\t\t\ttemplate: \"Key\"\r\n\t\t\t}, {\r\n\t\t\t\tlabel: \"Description\",\r\n\t\t\t\ttemplate: \"Value\"\r\n\t\t\t}, {\r\n\t\t\t\tlabel: \"WBS Element\",\r\n\t\t\t\ttemplate: \"WbsEle\"\r\n\t\t\t}, {\r\n\t\t\t\tlabel: \"WBS Description\",\r\n\t\t\t\ttemplate: \"WbsDescr\"\r\n\t\t\t}];\r\n\r\n\t\t\tvEmpNo = this.baseController.getView().getModel(\"tsEmpAppData\").getData().empData.EmpNo;\r\n\t\t\taFilters.push(new sap.ui.model.Filter({\r\n\t\t\t\tpath: \"EmpNo\",\r\n\t\t\t\toperator: \"EQ\",\r\n\t\t\t\tvalue1: vEmpNo\r\n\t\t\t}));\r\n\t\t\taKeys = [aCols[0].template, [], aCols[1].template];\r\n\t\t\toValueHelpTexts = {\r\n\t\t\t\tvalueHelpTitle: \"Search for Projects\",\r\n\t\t\t\tvalueHelpTableTitle: \"Project Search Results\"\r\n\t\t\t};\r\n\r\n\t\t\tthis.initializeValueRequestDialog(oValueHelpTexts, aCols, aKeys);\r\n\t\t\tthis.baseController.oDataManager.readProjectValueRequest(aFilters, jQuery.proxy(this.onValueRequestDataLoadSuccess, this));\r\n\t\t},\r\n\r\n\t\tvalueRequestDialogForEmployees: function() {\r\n\t\t\tvar aCols = [],\r\n\t\t\t\taKeys = [],\r\n\t\t\t\toValueHelpTexts = {};\r\n\t\t\taCols = [{\r\n\t\t\t\tlabel: \"Employee No.\",\r\n\t\t\t\ttemplate: \"Key\"\r\n\t\t\t}, {\r\n\t\t\t\tlabel: \"Employee Name\",\r\n\t\t\t\ttemplate: \"Value\"\r\n\t\t\t}];\r\n\r\n\t\t\taKeys = [aCols[0].template, [], aCols[1].template];\r\n\t\t\toValueHelpTexts = {\r\n\t\t\t\tvalueHelpTitle: \"Search for Employees\",\r\n\t\t\t\tvalueHelpTableTitle: \"Emploee Search Results\"\r\n\t\t\t};\r\n\r\n\t\t\tthis.initializeValueRequestDialog(oValueHelpTexts, aCols, aKeys);\r\n\t\t\tthis.baseController.oDataManager.readEmployeeValueRequest(jQuery.proxy(this.onValueRequestDataLoadSuccess, this));\r\n\t\t},\r\n\r\n\t\tonValueRequestDataLoadSuccess: function(data, response) {\r\n\t\t\t// Initialize Value Help Dialog\r\n\t\t\tthis.baseController.getView().setBusy(false);\r\n\t\t\tif (!this.oValueHelpDialog) {\r\n\t\t\t\tthis.oValueHelpDialog = new ValueHelpDialog({\r\n\t\t\t\t\tbasicSearchText: \"\",\r\n\t\t\t\t\tsupportMultiselect: false,\r\n\t\t\t\t\ttitle: this.oValueHelpTexts.valueHelpTitle,\r\n\t\t\t\t\tkey: this.aKeys[0],\r\n\t\t\t\t\tkeys: this.aKeys[1],\r\n\t\t\t\t\tdescriptionKey: this.aKeys[2],\r\n\t\t\t\t\tstretchOnPhone: true,\r\n\t\t\t\t\tok: function(oEvent) {\r\n\t\t\t\t\t\tthis.valueHelpHandleOk(oEvent.getParameter(\"tokens\"));\r\n\t\t\t\t\t\tthis.oValueHelpDialog.fireCancel();\r\n\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\tcancel: function(oEvent) {\r\n\t\t\t\t\t\tthis.oValueHelpDialog.close();\r\n\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\tafterClose: function() {\r\n\t\t\t\t\t\tthis.oFilterBar.destroy();\r\n\t\t\t\t\t\tthis.oValueHelpDialog.destroy();\r\n\t\t\t\t\t\tthis.oValueHelpDialog = undefined;\r\n\t\t\t\t\t\tthis.oFilterBar = undefined;\r\n\t\t\t\t\t\tthis.valueHelpCloneTableData = undefined;\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Value help Dialog Table Modelling\r\n\r\n\t\t\t// Set Table Rows & Columns Data\r\n\t\t\tthis.oColModel.setData({\r\n\t\t\t\tcols: this.aCols\r\n\t\t\t});\r\n\t\t\tthis.oRowModel.setData(data.results);\r\n\r\n\t\t\t// Set Table Columns and Row Data Model\r\n\t\t\tthis.oValueHelpDialog.getTable().setModel(this.oColModel, \"columns\");\r\n\t\t\tthis.oValueHelpDialog.getTable().setModel(this.oRowModel);\r\n\r\n\t\t\t// Set Table bindings\r\n\t\t\tif (this.oValueHelpDialog.getTable().bindRows) {\r\n\t\t\t\tthis.oValueHelpDialog.getTable().bindRows(\"/\");\r\n\t\t\t}\r\n\r\n\t\t\tif (this.oValueHelpDialog.getTable().bindItems) {\r\n\t\t\t\tvar oTable;\r\n\t\t\t\toTable = this.oValueHelpDialog.getTable();\r\n\t\t\t\tif (oTable) {\r\n\t\t\t\t\toTable.bindAggregation(\"items\", \"/\", function(id, context) {\r\n\t\t\t\t\t\tvar aCols = oTable.getModel(\"columns\").getData().cols;\r\n\t\t\t\t\t\treturn new sap.m.ColumnListItem({\r\n\t\t\t\t\t\t\tcells: aCols.map(function(element) {\r\n\t\t\t\t\t\t\t\tvar colname = element.template;\r\n\t\t\t\t\t\t\t\treturn new sap.m.Label({\r\n\t\t\t\t\t\t\t\t\ttext: \"{\" + colname + \"}\"\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Set Table Properties\r\n\r\n\t\t\t// Initialize Filter Bar for Value Help\r\n\t\t\tif (!this.oFilterBar) {\r\n\t\t\t\tthis.oFilterBar = new sap.ui.comp.filterbar.FilterBar({\r\n\t\t\t\t\tadvancedMode: true,\r\n\t\t\t\t\tfilterBarExpanded: false,\r\n\t\t\t\t\tshowGoOnFB: !sap.ui.Device.system.phone,\r\n\t\t\t\t\tsearch: function(odata, fnSearch, oEvent) {\r\n\t\t\t\t\t\tthis.oValueHelpDialog.getFilterBar().getBasicSearch().search();\r\n\t\t\t\t\t\t// sap.m.MessageToast.show(\"Search pressed '\" + arguments[0].mParameters.selectionSet[0].getValue() + \"''\");\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this.oFilterBar.setBasicSearch) {\r\n\t\t\t\tvar searchString;\r\n\t\t\t\tthis.oFilterBar.setBasicSearch(new sap.m.SearchField({\r\n\t\t\t\t\tshowSearchButton: sap.ui.Device.system.phone,\r\n\t\t\t\t\tplaceholder: \"Search\",\r\n\t\t\t\t\tliveChange: function(oEvent) {\r\n\t\t\t\t\t\tsearchString = oEvent.getParameter(\"newValue\");\r\n\t\t\t\t\t\tthis.onValueHelpBasicSearch(searchString);\r\n\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\tsearch: function(oEvent) {\r\n\t\t\t\t\t\tsearchString = oEvent.getParameter(\"query\");\r\n\t\t\t\t\t\tthis.onValueHelpBasicSearch(searchString);\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\r\n\t\t\t// Set Filter Bar for Value Help Dialog \r\n\t\t\tthis.oValueHelpDialog.setFilterBar(this.oFilterBar);\r\n\t\t\tthis.oValueHelpDialog.addStyleClass(\"sapUiSizeCompact\");\r\n\t\t\tthis.oValueHelpDialog.open();\r\n\t\t\tthis.oValueHelpDialog.update();\r\n\t\t\t// Set table Properties\r\n\t\t\t// this.oValueHelpDialog.getTable().getTitle().setText(this.oValueHelpTexts.valueHelpTableTitle + \" : \" + data.results.length);\r\n\r\n\t\t},\r\n\r\n\t\tonValueHelpBasicSearch: function(string) {\r\n\t\t\tvar oValueHelpTableModel, valueHelpTableData, searchResultData;\r\n\t\t\toValueHelpTableModel = this.oValueHelpDialog.getTable().getModel();\r\n\t\t\tif (!this.valueHelpCloneTableData)\r\n\t\t\t\tthis.valueHelpCloneTableData = oValueHelpTableModel.getData();\r\n\r\n\t\t\tif (this.valueHelpCloneTableData)\r\n\t\t\t\tvalueHelpTableData = this.valueHelpCloneTableData;\r\n\r\n\t\t\tif (valueHelpTableData) {\r\n\t\t\t\tsearchResultData = _.filter(valueHelpTableData, function(item) {\r\n\t\t\t\t\tfor (var i = 0; i < this.aCols.length; i++) {\r\n\t\t\t\t\t\tvar col = this.aCols[i].template;\r\n\t\t\t\t\t\t// if (item[col].toLowerCase().indexOf(string.toLowerCase()) !== -1 || item[col].toLowerCase().indexOf(string.toLowerCase()) !== -1)\r\n\t\t\t\t\t\tif (item[col].toLowerCase().indexOf(string.toLowerCase()) !== -1)\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}.bind(this));\r\n\t\t\t\toValueHelpTableModel.setData(searchResultData);\r\n\t\t\t}\r\n\t\t\toValueHelpTableModel.refresh();\r\n\t\t}\r\n\r\n\t};\r\n\r\n});",
		"emp/nom/sub/util/Helper/ModelHelper.js": "sap.ui.define([\r\n\t\t\"sap/ui/model/Filter\"\r\n\t],\r\n\r\n\tfunction(Filter) {\r\n\t\t\"use strict\";\r\n\r\n\t\tvar ModelHelper = {\r\n\t\t\tgetNewFilter: function(path, operator, value1, value2) {\r\n\t\t\t\treturn new Filter({\r\n\t\t\t\t\tpath: path,\r\n\t\t\t\t\toperator: operator,\r\n\t\t\t\t\tvalue1: value1,\r\n\t\t\t\t\tvalue2: value2\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn ModelHelper;\r\n\r\n\t});",
		"emp/nom/sub/util/Helper/ConfirmDialog.js": "sap.ui.define([\r\n\t\t\"sap/m/Dialog\",\r\n\t\t\"sap/m/Button\"\r\n\t],\r\n\tfunction(Dialog, Button) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn {\r\n\t\t\tconfirmProceedMessageType: function(fnOk, fnCancel, objectData) {\r\n\t\t\t\t// fnOk = fnOk;\r\n\t\t\t\tvar oDialog = new Dialog({\r\n\t\t\t\t\ticon: objectData.icon,\r\n\t\t\t\t\ttitle: objectData.title,\r\n\t\t\t\t\ttype: objectData.type,\r\n\t\t\t\t\tcontent: objectData.content,\r\n\t\t\t\t\tbeginButton: new Button({\r\n\t\t\t\t\t\ttext: objectData.buttonText,\r\n\t\t\t\t\t\tpress: function() {\r\n\t\t\t\t\t\t\tfnOk();\r\n\t\t\t\t\t\t\toDialog.close();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tendButton: new Button({\r\n\t\t\t\t\t\ttext: 'Cancel',\r\n\t\t\t\t\t\tpress: function() {\r\n\t\t\t\t\t\t\tfnCancel();\r\n\t\t\t\t\t\t\toDialog.close();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tafterClose: function() {\r\n\t\t\t\t\t\toDialog.destroy();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\toDialog.addStyleClass(\"sapUiSizeCompact\");\r\n\t\t\t\toDialog.open();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t});",
		"emp/nom/sub/util/Helper/MessageHelper.js": "sap.ui.define([\r\n\t\t\"sap/ui/base/EventProvider\",\r\n\t\t\"sap/m/MessageBox\",\r\n\t\t'sap/m/MessagePopover',\r\n\t\t'sap/m/MessagePopoverItem',\r\n\t\t\"sap/ui/model/Binding\"\r\n\t],\r\n\r\n\tfunction(EventProvider, MessageBox, MessagePopover, MessagePopoverItem, Binding) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn EventProvider.extend(\"emp.nom.sub.util.Helper.MessageHelper\", {\r\n\r\n\t\t\tconstructor: function(baseController) {\r\n\t\t\t\tthis._baseController = baseController;\r\n\t\t\t\tthis._initHandleMessages();\r\n\t\t\t},\r\n\r\n\t\t\tinformation: function(message) {\r\n\t\t\t\tMessageBox.information(message);\r\n\t\t\t},\r\n\r\n\t\t\t_getMessagePopoverItem: function() {\r\n\t\t\t\tif (!this.oMessagePopoverItem) {\r\n\t\t\t\t\tthis.oMessagePopoverItem = new MessagePopoverItem({\r\n\t\t\t\t\t\ttype: \"{messages>type}\",\r\n\t\t\t\t\t\ttitle: \"{messages>message}\",\r\n\t\t\t\t\t\tdescription: \"{messages>description}\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn this.oMessagePopoverItem;\r\n\t\t\t},\r\n\r\n\t\t\t_initHandleMessages: function() {\r\n\t\t\t\tthis._initializeMessagePopver();\r\n\t\t\t\tvar oBinding = new Binding(this._baseController.getMessageModel(), \"/\", this._baseController.getMessageModel().getContext(\"/\"));\r\n\t\t\t\toBinding.attachChange(this._baseController.handleAppMessages.bind(this._baseController));\r\n\t\t\t},\r\n\r\n\t\t\t_initializeMessagePopver: function() {\r\n\t\t\t\tvar fnPopoverItem = function() {\r\n\t\t\t\t\treturn new MessagePopoverItem({\r\n\t\t\t\t\t\ttype: \"{messages>type}\",\r\n\t\t\t\t\t\ttitle: \"{messages>message}\",\r\n\t\t\t\t\t\tdescription: \"{messages>description}\"\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tif (!this.oMessagePopver) {\r\n\t\t\t\t\tthis.oMessagePopver = new MessagePopover({\r\n\t\t\t\t\t\titems: {\r\n\t\t\t\t\t\t\tpath: 'messages>/',\r\n\t\t\t\t\t\t\ttemplate: fnPopoverItem()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.oMessagePopver.setModel(this._baseController.getMessageModel(), \"messages\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tgetMessagePopover: function() {\r\n\t\t\t\tif (this.oMessagePopver.getModel(\"messages\").getData().length > 0) {\r\n\t\t\t\t\treturn this.oMessagePopver;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t});"
	}
});